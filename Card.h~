#ifndef CARD_H
#define CARD_H

#include <utility>
#include <string>
#include <tuple>

namespace Solitaire
{
  typedef std::tuple<char, char, char> Position;

  class Card {
  public:

    virtual ~Card(){}

    bool is_red() const { return red; }

    bool is_covered() const { return covered; }

    virtual char to_ascii() const = 0;

    virtual std::string to_unicode() const = 0;

  protected:
  Card(bool is_red, bool is_covered) : red(is_red), covered(is_covered) {}
  private:
    bool red;
    bool covered;
  };
}
#endif

  
